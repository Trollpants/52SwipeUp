// <copyright file="CloudIDs.cs" company="Jan Ivar Z. Carlsen, Sindri Jóelsson">
// Copyright (c) 2016 Jan Ivar Z. Carlsen, Sindri Jóelsson. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root for full license information.
// </copyright>

namespace CloudOnce
{
#if (UNITY_ANDROID || UNITY_IOS || UNITY_TVOS) && !UNITY_EDITOR
    using Internal;
    using UnityEngine;
#endif
    /// <summary>
    /// Provides access to achievement- and leaderboard IDs registered via the CloudOnce Editor.
    /// This file was automatically generated by CloudOnce. Do not edit.
    /// </summary>
    public static class CloudIDs
    {
        /// <summary>
        /// Contains properties that retrieves achievement IDs for the current platform.
        /// </summary>
        public static class AchievementIDs
        {
            public static string FullDeck
            {
                get
                {
#if UNITY_ANDROID && !UNITY_EDITOR
#if CLOUDONCE_AMAZON
                    return "";
#elif CLOUDONCE_GOOGLE
                    return "";
#else
                    return string.Empty;
#endif
#elif (UNITY_IOS || UNITY_TVOS) && !UNITY_EDITOR
                    return "";
#elif UNITY_EDITOR
                    return "FullDeck";
#else
                    return string.Empty;
#endif
                }
            }

            public static string Gambler
            {
                get
                {
#if UNITY_ANDROID && !UNITY_EDITOR
#if CLOUDONCE_AMAZON
                    return "";
#elif CLOUDONCE_GOOGLE
                    return "";
#else
                    return string.Empty;
#endif
#elif (UNITY_IOS || UNITY_TVOS) && !UNITY_EDITOR
                    return "";
#elif UNITY_EDITOR
                    return "Gambler";
#else
                    return string.Empty;
#endif
                }
            }

            public static string HighRoller
            {
                get
                {
#if UNITY_ANDROID && !UNITY_EDITOR
#if CLOUDONCE_AMAZON
                    return "";
#elif CLOUDONCE_GOOGLE
                    return "";
#else
                    return string.Empty;
#endif
#elif (UNITY_IOS || UNITY_TVOS) && !UNITY_EDITOR
                    return "";
#elif UNITY_EDITOR
                    return "HighRoller";
#else
                    return string.Empty;
#endif
                }
            }

            public static string Lucky
            {
                get
                {
#if UNITY_ANDROID && !UNITY_EDITOR
#if CLOUDONCE_AMAZON
                    return "";
#elif CLOUDONCE_GOOGLE
                    return "";
#else
                    return string.Empty;
#endif
#elif (UNITY_IOS || UNITY_TVOS) && !UNITY_EDITOR
                    return "";
#elif UNITY_EDITOR
                    return "Lucky";
#else
                    return string.Empty;
#endif
                }
            }

            public static string SteadyHand
            {
                get
                {
#if UNITY_ANDROID && !UNITY_EDITOR
#if CLOUDONCE_AMAZON
                    return "";
#elif CLOUDONCE_GOOGLE
                    return "";
#else
                    return string.Empty;
#endif
#elif (UNITY_IOS || UNITY_TVOS) && !UNITY_EDITOR
                    return "";
#elif UNITY_EDITOR
                    return "SteadyHand";
#else
                    return string.Empty;
#endif
                }
            }
        }

        /// <summary>
        /// Contains properties that retrieves leaderboard IDs for the current platform.
        /// </summary>
        public static class LeaderboardIDs
        {
            public static string Highscore
            {
                get
                {
#if UNITY_ANDROID && !UNITY_EDITOR
#if CLOUDONCE_AMAZON
                    return "";
#elif CLOUDONCE_GOOGLE
                    return "";
#else
                    return string.Empty;
#endif
#elif (UNITY_IOS || UNITY_TVOS) && !UNITY_EDITOR
                    return "";
#elif UNITY_EDITOR
                    return "Highscore";
#else
                    return string.Empty;
#endif
                }
            }
        }
    }
}
